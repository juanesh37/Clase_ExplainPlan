Es una manera que muestra los detalles en como se ejecuta los querys

create table test_case(
  col_pk integer not null;
  col_i1 integer not null;
  col_d1 date not null;
  col_c1 varchar(100) not null;
  col_i2 integer not null;
  col_d2 date not null;
  col_c2 varchar2(100) not null;
);

create or replace function repeat (c char, n integer) return varchar is
s varchar2(100) := '';
begin
  for i in 1 .. n loop
      s := s || c;
  end loop;
  return (s);
end;

--Para testear la función
select repeat('x',5) from dual;

--Procedimiento anónimo
declare
row_count integer := 10000000;
begin
  for i in 1 .. row_count loop
    insert into test_case
      values (i, mod(i,100), sysdate-mod(i,100),
      repeat (substr('ABCDEFGHIJ',mod(i,10),1),10),
      mod(i,100), sysdate-mod(i,100),
      repeat(substr('ABCDEFGHIJ' ,mod(i,10),1),10)
      );
  
  if (mod(i,100)= 0) then
    commit;
    end if;
  end loop;
end;

select MAX(col_pk) From test_case;
--
select * from test_case
where col_d2 - (select min(col_d2)
from test_case where col_pk <= 1000 or col_pk > 990000)
--

EXPLAIN PLAN SET STATEMENT_ID = 'bad1' FOR
select * from test_case
where col_d2 = (select min(col_d2)
from test_case where col_pk <= 1000 or col_pk > 990000)

select * from plan_table;

--Para agrandar el tamaño y quepan más 
alter tablespace system 
add datafile 'juan.dbf'
size 200M;

-- Para que muestre más bonito
select * from table
(DBMS_XPLAN.DISPLAY('PLAN_TABLE', 'bad1', 'TYPICAL ') );

--Para agregar clave primaria
ALTER TABLE test_case
ADD CONSTRAINT test_case_pk PRIMARY KEY (col_pk);


-- Para volver a crear y ver si mejora después de crear la PK
EXPLAIN PLAN SET STATEMENT_ID = 'bad2' FOR
select * from test_case
where col_d2 = (select min(col_d2)
from test_case where col_pk <= 1000 or col_pk > 990000)

select * from table
(DBMS_XPLAN.DISPLAY('PLAN_TABLE', 'bad2', 'TYPICAL ') );

--CREMOS UN INDICE A VER SI MEJORA
CREATE INDEX col_d2 ON test_case (col_d2);

-- Para volver a crear y ver si mejora después de crear el indice
EXPLAIN PLAN SET STATEMENT_ID = 'bad3' FOR
select * from test_case
where col_d2 = (select min(col_d2)
from test_case where col_pk <= 1000 or col_pk > 990000)

select * from table
(DBMS_XPLAN.DISPLAY('PLAN_TABLE', 'bad3', 'TYPICAL ') );

-- vamos a cambiar el rango por un not between

select * from test_case
where col_d2 = (select min (col_d2)
from test_case where col_pk NOT BETWEEN 1001 AND 990000)

EXPLAIN PLAN SET STATEMENT_ID = 'bad4' FOR
select * from test_case
where col_d2 = (select min(col_d2)
from test_case where col_pk <= 1000 or col_pk > 990000)

select * from table
(DBMS_XPLAN.DISPLAY('PLAN_TABLE', 'bad4', 'TYPICAL ') );
